{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\komar\\\\OneDrive\\\\Pulpit\\\\BestSpot\\\\client\\\\src\\\\components\\\\map.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useMemo, useCallback, useRef } from \"react\";\nimport { GoogleMap, Marker,\n// DirectionsRenderer,\nCircle\n// MarkerClusterer,\n} from \"@react-google-maps/api\";\nimport SearchFilters from \"./SearchFilters\";\nimport Spots from \"./Spots\";\nimport SearchBar from \"./SearchBar\";\nimport { blueBallIcon } from \"./mapStyles.js\";\n// import Distance from \"./distance\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Map({\n  isLoaded\n}) {\n  _s();\n  const [location, setLocation] = useState();\n  const [sliderValue, setSliderValue] = useState(1);\n  const [spotValue, setSpotValue] = useState(\"\");\n  const [searchResults, setSearchResults] = useState();\n  const mapRef = useRef();\n  const center = useMemo(() => ({\n    lat: 43,\n    lng: -80\n  }), []);\n  const options = useMemo(() => ({\n    mapId: \"b181cac70f27f5e6\",\n    disableDefaultUI: true,\n    clickableIcons: false\n  }), []);\n  const onLoad = useCallback(map => mapRef.current = map, []);\n  const handleSearch = () => {\n    const data = {\n      keyword: spotValue,\n      location: {\n        lat: location.lat,\n        lng: location.lng\n      },\n      radius: sliderValue\n    };\n    fetch(\"/api/search\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    }).then(response => response.json()).then(result => {\n      console.log(\"Success:\", result);\n      setSearchResults(result);\n      console.log(searchResults);\n    }).catch(error => {\n      console.error(\"Error:\", error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), isLoaded, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map\",\n        children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n          zoom: 10,\n          center: center,\n          options: options,\n          mapContainerClassName: \"map-container2\",\n          onLoad: onLoad,\n          children: [location && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Marker, {\n              position: location,\n              icon: {\n                url: blueBallIcon\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Circle, {\n              center: location,\n              radius: sliderValue * 100\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), searchResults && searchResults.map(result => /*#__PURE__*/_jsxDEV(Marker, {\n            position: result.position\n          }, result, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Spots, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchFilters, {\n      setLocation: position => {\n        var _mapRef$current;\n        setLocation(position);\n        (_mapRef$current = mapRef.current) === null || _mapRef$current === void 0 ? void 0 : _mapRef$current.panTo(position);\n      },\n      sliderValue: sliderValue,\n      setSliderValue: setSliderValue,\n      spotValue: spotValue,\n      setSpotValue: setSpotValue,\n      handleSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Map, \"0oVME/KpGLccps+po7iVGr2QNYw=\");\n_c = Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["useState","useMemo","useCallback","useRef","GoogleMap","Marker","Circle","SearchFilters","Spots","SearchBar","blueBallIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","Map","isLoaded","_s","location","setLocation","sliderValue","setSliderValue","spotValue","setSpotValue","searchResults","setSearchResults","mapRef","center","lat","lng","options","mapId","disableDefaultUI","clickableIcons","onLoad","map","current","handleSearch","data","keyword","radius","fetch","method","headers","body","JSON","stringify","then","response","json","result","console","log","catch","error","children","className","fileName","_jsxFileName","lineNumber","columnNumber","zoom","mapContainerClassName","position","icon","url","_mapRef$current","panTo","_c","$RefreshReg$"],"sources":["C:/Users/komar/OneDrive/Pulpit/BestSpot/client/src/components/map.jsx"],"sourcesContent":["import { useState, useMemo, useCallback, useRef } from \"react\";\r\nimport {\r\n  GoogleMap,\r\n  Marker,\r\n  // DirectionsRenderer,\r\n  Circle,\r\n  // MarkerClusterer,\r\n} from \"@react-google-maps/api\";\r\n\r\nimport SearchFilters from \"./SearchFilters\";\r\nimport Spots from \"./Spots\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport { blueBallIcon } from \"./mapStyles.js\";\r\n// import Distance from \"./distance\";\r\n\r\nexport default function Map({ isLoaded }) {\r\n  const [location, setLocation] = useState();\r\n  const [sliderValue, setSliderValue] = useState(1);\r\n  const [spotValue, setSpotValue] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState();\r\n\r\n  const mapRef = useRef();\r\n  const center = useMemo(() => ({ lat: 43, lng: -80 }), []);\r\n  const options = useMemo(\r\n    () => ({\r\n      mapId: \"b181cac70f27f5e6\",\r\n      disableDefaultUI: true,\r\n      clickableIcons: false,\r\n    }),\r\n    []\r\n  );\r\n  const onLoad = useCallback((map) => (mapRef.current = map), []);\r\n\r\n  const handleSearch = () => {\r\n    const data = {\r\n      keyword: spotValue,\r\n      location: {\r\n        lat: location.lat,\r\n        lng: location.lng,\r\n      },\r\n      radius: sliderValue,\r\n    };\r\n\r\n    fetch(\"/api/search\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        console.log(\"Success:\", result);\r\n        setSearchResults(result);\r\n        console.log(searchResults);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error:\", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <SearchBar />\r\n        {isLoaded}\r\n        <div className=\"map\">\r\n          <GoogleMap\r\n            zoom={10}\r\n            center={center}\r\n            options={options}\r\n            mapContainerClassName=\"map-container2\"\r\n            onLoad={onLoad}\r\n          >\r\n            {location && (\r\n              <>\r\n                <Marker\r\n                  position={location}\r\n                  icon={{\r\n                    url: blueBallIcon,\r\n                  }}\r\n                />\r\n                <Circle center={location} radius={sliderValue * 100}></Circle>\r\n              </>\r\n            )}\r\n\r\n            {searchResults &&\r\n              searchResults.map((result) => (\r\n                <Marker key={result} position={result.position} />\r\n              ))}\r\n          </GoogleMap>\r\n        </div>\r\n        <Spots />\r\n      </div>\r\n      <SearchFilters\r\n        setLocation={(position) => {\r\n          setLocation(position);\r\n          mapRef.current?.panTo(position);\r\n        }}\r\n        sliderValue={sliderValue}\r\n        setSliderValue={setSliderValue}\r\n        spotValue={spotValue}\r\n        setSpotValue={setSpotValue}\r\n        handleSearch={handleSearch}\r\n      />\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}