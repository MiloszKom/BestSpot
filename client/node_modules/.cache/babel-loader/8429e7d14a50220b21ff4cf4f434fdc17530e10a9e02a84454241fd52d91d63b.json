{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\komar\\\\OneDrive\\\\Pulpit\\\\PlacePalApp\\\\client\\\\src\\\\components\\\\LocationsMap.jsx\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { APIProvider, Map, Marker } from \"@vis.gl/react-google-maps\";\nimport { darkThemeStyles, blueBallIcon } from \"./mapStyles.js\";\nimport { SearchContext } from \"./SearchContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LocationsMap() {\n  // const { userLat, setUserLat, userLng, setUserLng, results, setResults } =\n  //   useContext(SearchContext);\n\n  // const [mapMarkers, setMapMarkers] = useState([]);\n\n  // useEffect(() => {\n  //   const getLocation = () => {\n  //     if (navigator.geolocation) {\n  //       navigator.geolocation.getCurrentPosition(\n  //         (position) => {\n  //           setUserLat(position.coords.latitude);\n  //           setUserLng(position.coords.longitude);\n  //         },\n  //         (error) => {\n  //           console.error(\"Error getting location:\", error);\n  //           setFallbackLocation();\n  //         }\n  //       );\n  //     } else {\n  //       setFallbackLocation();\n  //     }\n  //   };\n\n  //   const setFallbackLocation = () => {\n  //     setUserLat(51.1027203);\n  //     setUserLng(16.9439538);\n  //   };\n\n  //   getLocation();\n  // }, [setUserLat, setUserLng]);\n\n  // useEffect(() => {\n  //   if (results) {\n  //     console.log(results);\n  //     const newMarkers = results.map((result) => (\n  //       <Marker key={result} position={result.geometry.location} />\n  //     ));\n  //     setMapMarkers(newMarkers);\n  //   }\n  // }, [results]);\n\n  // if (userLat === null || userLng === null) {\n  //   return <div>Loading map...</div>;\n  // }\n\n  async function initMap() {\n    // Request needed libraries.\n    const {\n      Map\n    } = await google.maps.importLibrary(\"maps\");\n    const {\n      AdvancedMarkerElement\n    } = await google.maps.importLibrary(\"marker\");\n    const map = new Map(document.getElementById(\"map\"), {\n      center: {\n        lat: 37.4239163,\n        lng: -122.0947209\n      },\n      zoom: 14,\n      mapId: \"4504f8b37365c3d0\"\n    });\n    const marker = new AdvancedMarkerElement({\n      map,\n      position: {\n        lat: 37.4239163,\n        lng: -122.0947209\n      }\n    });\n  }\n  initMap();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this)\n  // <APIProvider apiKey={process.env.React_App_Api_Key}>\n  //   <Map\n  //     id=\"map\"\n  //     keyboardShortcuts={false}\n  //     disableDefaultUI={true}\n  //     defaultZoom={13}\n  //     defaultCenter={{ lat: userLat, lng: userLng }}\n  //     options={{\n  //       styles: darkThemeStyles,\n  //     }}\n  //   >\n  //     <Marker\n  //       position={{ lat: userLat, lng: userLng }}\n  //       icon={{\n  //         url: blueBallIcon,\n  //       }}\n  //     />\n  //     {mapMarkers}\n  //   </Map>\n  // </APIProvider>\n  ;\n}\n_c = LocationsMap;\nvar _c;\n$RefreshReg$(_c, \"LocationsMap\");","map":{"version":3,"names":["React","useState","useEffect","useContext","APIProvider","Map","Marker","darkThemeStyles","blueBallIcon","SearchContext","jsxDEV","_jsxDEV","LocationsMap","initMap","google","maps","importLibrary","AdvancedMarkerElement","map","document","getElementById","center","lat","lng","zoom","mapId","marker","position","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/komar/OneDrive/Pulpit/PlacePalApp/client/src/components/LocationsMap.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { APIProvider, Map, Marker } from \"@vis.gl/react-google-maps\";\r\nimport { darkThemeStyles, blueBallIcon } from \"./mapStyles.js\";\r\nimport { SearchContext } from \"./SearchContext\";\r\n\r\nexport default function LocationsMap() {\r\n  // const { userLat, setUserLat, userLng, setUserLng, results, setResults } =\r\n  //   useContext(SearchContext);\r\n\r\n  // const [mapMarkers, setMapMarkers] = useState([]);\r\n\r\n  // useEffect(() => {\r\n  //   const getLocation = () => {\r\n  //     if (navigator.geolocation) {\r\n  //       navigator.geolocation.getCurrentPosition(\r\n  //         (position) => {\r\n  //           setUserLat(position.coords.latitude);\r\n  //           setUserLng(position.coords.longitude);\r\n  //         },\r\n  //         (error) => {\r\n  //           console.error(\"Error getting location:\", error);\r\n  //           setFallbackLocation();\r\n  //         }\r\n  //       );\r\n  //     } else {\r\n  //       setFallbackLocation();\r\n  //     }\r\n  //   };\r\n\r\n  //   const setFallbackLocation = () => {\r\n  //     setUserLat(51.1027203);\r\n  //     setUserLng(16.9439538);\r\n  //   };\r\n\r\n  //   getLocation();\r\n  // }, [setUserLat, setUserLng]);\r\n\r\n  // useEffect(() => {\r\n  //   if (results) {\r\n  //     console.log(results);\r\n  //     const newMarkers = results.map((result) => (\r\n  //       <Marker key={result} position={result.geometry.location} />\r\n  //     ));\r\n  //     setMapMarkers(newMarkers);\r\n  //   }\r\n  // }, [results]);\r\n\r\n  // if (userLat === null || userLng === null) {\r\n  //   return <div>Loading map...</div>;\r\n  // }\r\n\r\n  async function initMap() {\r\n    // Request needed libraries.\r\n    const { Map } = await google.maps.importLibrary(\"maps\");\r\n    const { AdvancedMarkerElement } = await google.maps.importLibrary(\"marker\");\r\n    const map = new Map(document.getElementById(\"map\"), {\r\n      center: { lat: 37.4239163, lng: -122.0947209 },\r\n      zoom: 14,\r\n      mapId: \"4504f8b37365c3d0\",\r\n    });\r\n    const marker = new AdvancedMarkerElement({\r\n      map,\r\n      position: { lat: 37.4239163, lng: -122.0947209 },\r\n    });\r\n  }\r\n\r\n  initMap();\r\n\r\n  return (\r\n    <div id=\"map\"></div>\r\n    // <APIProvider apiKey={process.env.React_App_Api_Key}>\r\n    //   <Map\r\n    //     id=\"map\"\r\n    //     keyboardShortcuts={false}\r\n    //     disableDefaultUI={true}\r\n    //     defaultZoom={13}\r\n    //     defaultCenter={{ lat: userLat, lng: userLng }}\r\n    //     options={{\r\n    //       styles: darkThemeStyles,\r\n    //     }}\r\n    //   >\r\n    //     <Marker\r\n    //       position={{ lat: userLat, lng: userLng }}\r\n    //       icon={{\r\n    //         url: blueBallIcon,\r\n    //       }}\r\n    //     />\r\n    //     {mapMarkers}\r\n    //   </Map>\r\n    // </APIProvider>\r\n  );\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,SAASC,WAAW,EAAEC,GAAG,EAAEC,MAAM,QAAQ,2BAA2B;AACpE,SAASC,eAAe,EAAEC,YAAY,QAAQ,gBAAgB;AAC9D,SAASC,aAAa,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,eAAe,SAASC,YAAYA,CAAA,EAAG;EACrC;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA,eAAeC,OAAOA,CAAA,EAAG;IACvB;IACA,MAAM;MAAER;IAAI,CAAC,GAAG,MAAMS,MAAM,CAACC,IAAI,CAACC,aAAa,CAAC,MAAM,CAAC;IACvD,MAAM;MAAEC;IAAsB,CAAC,GAAG,MAAMH,MAAM,CAACC,IAAI,CAACC,aAAa,CAAC,QAAQ,CAAC;IAC3E,MAAME,GAAG,GAAG,IAAIb,GAAG,CAACc,QAAQ,CAACC,cAAc,CAAC,KAAK,CAAC,EAAE;MAClDC,MAAM,EAAE;QAAEC,GAAG,EAAE,UAAU;QAAEC,GAAG,EAAE,CAAC;MAAY,CAAC;MAC9CC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE;IACT,CAAC,CAAC;IACF,MAAMC,MAAM,GAAG,IAAIT,qBAAqB,CAAC;MACvCC,GAAG;MACHS,QAAQ,EAAE;QAAEL,GAAG,EAAE,UAAU;QAAEC,GAAG,EAAE,CAAC;MAAY;IACjD,CAAC,CAAC;EACJ;EAEAV,OAAO,CAAC,CAAC;EAET,oBACEF,OAAA;IAAKiB,EAAE,EAAC;EAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM;EACnB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;AAEJ;AAACC,EAAA,GAtFuBrB,YAAY;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}