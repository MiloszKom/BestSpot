{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\komar\\\\OneDrive\\\\Pulpit\\\\BestSpot\\\\client\\\\src\\\\components\\\\map.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useMemo, useCallback, useRef } from \"react\";\nimport { APIProvider, Map, useMap, AdvancedMarker } from \"@vis.gl/react-google-maps\";\nimport SearchFilters from \"./SearchFilters\";\nimport Spots from \"./Spots\";\nimport SearchBar from \"./SearchBar\";\nimport { blueBallIcon } from \"./mapStyles.js\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function map({\n  isLoaded\n}) {\n  _s();\n  const [location, setLocation] = useState();\n  const [sliderValue, setSliderValue] = useState(0);\n  const [spotValue, setSpotValue] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const mapRef = useRef();\n  const center = useMemo(() => ({\n    lat: 51.103574,\n    lng: 16.943842\n  }), []);\n  const options = useMemo(() => ({\n    mapId: \"b181cac70f27f5e6\",\n    disableDefaultUI: true,\n    clickableIcons: false\n  }), []);\n  const onLoad = useCallback(map => mapRef.current = map, []);\n  const handleSearch = () => {\n    const data = {\n      keyword: spotValue,\n      location: {\n        lat: location.lat,\n        lng: location.lng\n      },\n      radius: sliderValue\n    };\n    const searchFilters = document.querySelector(\".search-filters\");\n    if (searchFilters) {\n      searchFilters.style.marginTop = \"0dvh\";\n    }\n    fetch(\"/api/search\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    }).then(response => response.json()).then(result => {\n      console.log(\"Success:\", result.googleData.results);\n      setSearchResults(result.googleData.results);\n    }).catch(error => {\n      console.error(\"Error:\", error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), isLoaded, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map\",\n        children: /*#__PURE__*/_jsxDEV(APIProvider, {\n          apiKey: process.env.React_App_Api_Key,\n          zoom: 10,\n          center: center,\n          options: options,\n          mapContainerClassName: \"map-container2\",\n          onLoad: onLoad,\n          children: [location && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Marker, {\n              position: location,\n              icon: {\n                url: blueBallIcon\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Circle, {\n              center: location,\n              radius: sliderValue * 100\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), searchResults && searchResults.map(result => /*#__PURE__*/_jsxDEV(Marker, {\n            position: result.geometry.location,\n            label: {\n              text: `${result.name} (${result.rating})`,\n              color: \"#00aaff\",\n              fontWeight: \"bold\",\n              fontSize: \"0.7rem\"\n            },\n            icon: {\n              url: \"http://maps.google.com/mapfiles/ms/icons/red-dot.png\",\n              labelOrigin: new window.google.maps.Point(17, 40) // Adjust x and y values\n            }\n          }, result.place_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Spots, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchFilters, {\n      setLocation: position => {\n        var _mapRef$current;\n        setLocation(position);\n        (_mapRef$current = mapRef.current) === null || _mapRef$current === void 0 ? void 0 : _mapRef$current.panTo(position);\n      },\n      sliderValue: sliderValue,\n      setSliderValue: setSliderValue,\n      spotValue: spotValue,\n      setSpotValue: setSpotValue,\n      handleSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(map, \"lAJ8rVQcx+putaaVG7dCG4yFmPM=\");","map":{"version":3,"names":["useState","useMemo","useCallback","useRef","APIProvider","Map","useMap","AdvancedMarker","SearchFilters","Spots","SearchBar","blueBallIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","map","isLoaded","_s","location","setLocation","sliderValue","setSliderValue","spotValue","setSpotValue","searchResults","setSearchResults","mapRef","center","lat","lng","options","mapId","disableDefaultUI","clickableIcons","onLoad","current","handleSearch","data","keyword","radius","searchFilters","document","querySelector","style","marginTop","fetch","method","headers","body","JSON","stringify","then","response","json","result","console","log","googleData","results","catch","error","children","className","fileName","_jsxFileName","lineNumber","columnNumber","apiKey","process","env","React_App_Api_Key","zoom","mapContainerClassName","Marker","position","icon","url","Circle","geometry","label","text","name","rating","color","fontWeight","fontSize","labelOrigin","window","google","maps","Point","place_id","_mapRef$current","panTo"],"sources":["C:/Users/komar/OneDrive/Pulpit/BestSpot/client/src/components/map.jsx"],"sourcesContent":["import { useState, useMemo, useCallback, useRef } from \"react\";\r\n\r\nimport {\r\n  APIProvider,\r\n  Map,\r\n  useMap,\r\n  AdvancedMarker,\r\n} from \"@vis.gl/react-google-maps\";\r\n\r\nimport SearchFilters from \"./SearchFilters\";\r\nimport Spots from \"./Spots\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport { blueBallIcon } from \"./mapStyles.js\";\r\n\r\nexport default function map({ isLoaded }) {\r\n  const [location, setLocation] = useState();\r\n  const [sliderValue, setSliderValue] = useState(0);\r\n  const [spotValue, setSpotValue] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const mapRef = useRef();\r\n  const center = useMemo(() => ({ lat: 51.103574, lng: 16.943842 }), []);\r\n  const options = useMemo(\r\n    () => ({\r\n      mapId: \"b181cac70f27f5e6\",\r\n      disableDefaultUI: true,\r\n      clickableIcons: false,\r\n    }),\r\n    []\r\n  );\r\n  const onLoad = useCallback((map) => (mapRef.current = map), []);\r\n\r\n  const handleSearch = () => {\r\n    const data = {\r\n      keyword: spotValue,\r\n      location: {\r\n        lat: location.lat,\r\n        lng: location.lng,\r\n      },\r\n      radius: sliderValue,\r\n    };\r\n\r\n    const searchFilters = document.querySelector(\".search-filters\");\r\n    if (searchFilters) {\r\n      searchFilters.style.marginTop = \"0dvh\";\r\n    }\r\n\r\n    fetch(\"/api/search\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        console.log(\"Success:\", result.googleData.results);\r\n        setSearchResults(result.googleData.results);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error:\", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <SearchBar />\r\n        {isLoaded}\r\n        <div className=\"map\">\r\n          <APIProvider\r\n            apiKey={process.env.React_App_Api_Key}\r\n            zoom={10}\r\n            center={center}\r\n            options={options}\r\n            mapContainerClassName=\"map-container2\"\r\n            onLoad={onLoad}\r\n          >\r\n            {location && (\r\n              <>\r\n                <Marker\r\n                  position={location}\r\n                  icon={{\r\n                    url: blueBallIcon,\r\n                  }}\r\n                />\r\n                <Circle center={location} radius={sliderValue * 100}></Circle>\r\n              </>\r\n            )}\r\n\r\n            {searchResults &&\r\n              searchResults.map((result) => (\r\n                <Marker\r\n                  key={result.place_id}\r\n                  position={result.geometry.location}\r\n                  label={{\r\n                    text: `${result.name} (${result.rating})`,\r\n                    color: \"#00aaff\",\r\n                    fontWeight: \"bold\",\r\n                    fontSize: \"0.7rem\",\r\n                  }}\r\n                  icon={{\r\n                    url: \"http://maps.google.com/mapfiles/ms/icons/red-dot.png\",\r\n                    labelOrigin: new window.google.maps.Point(17, 40), // Adjust x and y values\r\n                  }}\r\n                />\r\n              ))}\r\n          </APIProvider>\r\n        </div>\r\n        <Spots />\r\n      </div>\r\n      <SearchFilters\r\n        setLocation={(position) => {\r\n          setLocation(position);\r\n          mapRef.current?.panTo(position);\r\n        }}\r\n        sliderValue={sliderValue}\r\n        setSliderValue={setSliderValue}\r\n        spotValue={spotValue}\r\n        setSpotValue={setSpotValue}\r\n        handleSearch={handleSearch}\r\n      />\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,OAAO,EAAEC,WAAW,EAAEC,MAAM,QAAQ,OAAO;AAE9D,SACEC,WAAW,EACXC,GAAG,EACHC,MAAM,EACNC,cAAc,QACT,2BAA2B;AAElC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,YAAY,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE9C,eAAe,SAASC,GAAGA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACxC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,CAAC;EAC1C,MAAM,CAACqB,WAAW,EAAEC,cAAc,CAAC,GAAGtB,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACuB,SAAS,EAAEC,YAAY,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACyB,aAAa,EAAEC,gBAAgB,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM2B,MAAM,GAAGxB,MAAM,CAAC,CAAC;EACvB,MAAMyB,MAAM,GAAG3B,OAAO,CAAC,OAAO;IAAE4B,GAAG,EAAE,SAAS;IAAEC,GAAG,EAAE;EAAU,CAAC,CAAC,EAAE,EAAE,CAAC;EACtE,MAAMC,OAAO,GAAG9B,OAAO,CACrB,OAAO;IACL+B,KAAK,EAAE,kBAAkB;IACzBC,gBAAgB,EAAE,IAAI;IACtBC,cAAc,EAAE;EAClB,CAAC,CAAC,EACF,EACF,CAAC;EACD,MAAMC,MAAM,GAAGjC,WAAW,CAAEc,GAAG,IAAMW,MAAM,CAACS,OAAO,GAAGpB,GAAI,EAAE,EAAE,CAAC;EAE/D,MAAMqB,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,IAAI,GAAG;MACXC,OAAO,EAAEhB,SAAS;MAClBJ,QAAQ,EAAE;QACRU,GAAG,EAAEV,QAAQ,CAACU,GAAG;QACjBC,GAAG,EAAEX,QAAQ,CAACW;MAChB,CAAC;MACDU,MAAM,EAAEnB;IACV,CAAC;IAED,MAAMoB,aAAa,GAAGC,QAAQ,CAACC,aAAa,CAAC,iBAAiB,CAAC;IAC/D,IAAIF,aAAa,EAAE;MACjBA,aAAa,CAACG,KAAK,CAACC,SAAS,GAAG,MAAM;IACxC;IAEAC,KAAK,CAAC,aAAa,EAAE;MACnBC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACb,IAAI;IAC3B,CAAC,CAAC,CACCc,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,MAAM,IAAK;MAChBC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEF,MAAM,CAACG,UAAU,CAACC,OAAO,CAAC;MAClDjC,gBAAgB,CAAC6B,MAAM,CAACG,UAAU,CAACC,OAAO,CAAC;IAC7C,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBL,OAAO,CAACK,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC,CAAC,CAAC;EACN,CAAC;EAED,oBACEhD,OAAA,CAAAE,SAAA;IAAA+C,QAAA,gBACEjD,OAAA;MAAKkD,SAAS,EAAC,WAAW;MAAAD,QAAA,gBACxBjD,OAAA,CAACH,SAAS;QAAAsD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACZlD,QAAQ,eACTJ,OAAA;QAAKkD,SAAS,EAAC,KAAK;QAAAD,QAAA,eAClBjD,OAAA,CAACT,WAAW;UACVgE,MAAM,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAkB;UACtCC,IAAI,EAAE,EAAG;UACT5C,MAAM,EAAEA,MAAO;UACfG,OAAO,EAAEA,OAAQ;UACjB0C,qBAAqB,EAAC,gBAAgB;UACtCtC,MAAM,EAAEA,MAAO;UAAA2B,QAAA,GAEd3C,QAAQ,iBACPN,OAAA,CAAAE,SAAA;YAAA+C,QAAA,gBACEjD,OAAA,CAAC6D,MAAM;cACLC,QAAQ,EAAExD,QAAS;cACnByD,IAAI,EAAE;gBACJC,GAAG,EAAElE;cACP;YAAE;cAAAqD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eACFtD,OAAA,CAACiE,MAAM;cAAClD,MAAM,EAAET,QAAS;cAACqB,MAAM,EAAEnB,WAAW,GAAG;YAAI;cAAA2C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAS,CAAC;UAAA,eAC9D,CACH,EAEA1C,aAAa,IACZA,aAAa,CAACT,GAAG,CAAEuC,MAAM,iBACvB1C,OAAA,CAAC6D,MAAM;YAELC,QAAQ,EAAEpB,MAAM,CAACwB,QAAQ,CAAC5D,QAAS;YACnC6D,KAAK,EAAE;cACLC,IAAI,EAAE,GAAG1B,MAAM,CAAC2B,IAAI,KAAK3B,MAAM,CAAC4B,MAAM,GAAG;cACzCC,KAAK,EAAE,SAAS;cAChBC,UAAU,EAAE,MAAM;cAClBC,QAAQ,EAAE;YACZ,CAAE;YACFV,IAAI,EAAE;cACJC,GAAG,EAAE,sDAAsD;cAC3DU,WAAW,EAAE,IAAIC,MAAM,CAACC,MAAM,CAACC,IAAI,CAACC,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,CAAE;YACrD;UAAE,GAXGpC,MAAM,CAACqC,QAAQ;YAAA5B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAYrB,CACF,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACO;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC,eACNtD,OAAA,CAACJ,KAAK;QAAAuD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNtD,OAAA,CAACL,aAAa;MACZY,WAAW,EAAGuD,QAAQ,IAAK;QAAA,IAAAkB,eAAA;QACzBzE,WAAW,CAACuD,QAAQ,CAAC;QACrB,CAAAkB,eAAA,GAAAlE,MAAM,CAACS,OAAO,cAAAyD,eAAA,uBAAdA,eAAA,CAAgBC,KAAK,CAACnB,QAAQ,CAAC;MACjC,CAAE;MACFtD,WAAW,EAAEA,WAAY;MACzBC,cAAc,EAAEA,cAAe;MAC/BC,SAAS,EAAEA,SAAU;MACrBC,YAAY,EAAEA,YAAa;MAC3Ba,YAAY,EAAEA;IAAa;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC;EAAA,eACF,CAAC;AAEP;AAACjD,EAAA,CA7GuBF,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}