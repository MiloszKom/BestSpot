{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\komar\\\\OneDrive\\\\Pulpit\\\\PlacePalApp\\\\client\\\\src\\\\components\\\\LocationsMap.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { APIProvider } from \"@vis.gl/react-google-maps\";\nimport { darkThemeStyles, blueBallIcon } from \"./mapStyles.js\";\nimport { SearchContext } from \"./SearchContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LocationsMap() {\n  _s();\n  const {\n    userLat,\n    setUserLat,\n    userLng,\n    setUserLng,\n    results,\n    setResults\n  } = useContext(SearchContext);\n  const [mapMarkers, setMapMarkers] = useState([]);\n  useEffect(() => {\n    const getLocation = () => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(position => {\n          setUserLat(position.coords.latitude);\n          setUserLng(position.coords.longitude);\n        }, error => {\n          console.error(\"Error getting location:\", error);\n          setFallbackLocation();\n        });\n      } else {\n        setFallbackLocation();\n      }\n    };\n    const setFallbackLocation = () => {\n      setUserLat(51.1027203);\n      setUserLng(16.9439538);\n    };\n    getLocation();\n  }, [setUserLat, setUserLng]);\n  useEffect(() => {\n    if (results) {\n      const newMarkers = results.map((result, index) => ({\n        position: result.geometry.location,\n        key: index\n      }));\n      setMapMarkers(newMarkers);\n    }\n  }, [results]);\n  if (userLat === null || userLng === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading map...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(APIProvider, {\n    apiKey: process.env.React_App_Api_Key,\n    children: /*#__PURE__*/_jsxDEV(InitMap, {\n      id: \"map\",\n      mapId: \"test\",\n      defaultCenter: {\n        lat: userLat,\n        lng: userLng\n      },\n      defaultZoom: 13,\n      options: {\n        styles: darkThemeStyles,\n        disableDefaultUI: true,\n        keyboardShortcuts: false\n      },\n      onLoad: map => {\n        // Add the user marker\n        const userMarker = new window.google.maps.Marker({\n          position: {\n            lat: userLat,\n            lng: userLng\n          },\n          map,\n          icon: {\n            url: blueBallIcon\n          }\n        });\n\n        // Add the result markers\n        mapMarkers.forEach(({\n          position,\n          key\n        }) => {\n          new window.google.maps.Marker({\n            position,\n            map,\n            title: `Marker ${key}`\n          });\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(LocationsMap, \"V6/1y6G4whbHjxvr9jtktPSm45M=\");\n_c = LocationsMap;\nvar _c;\n$RefreshReg$(_c, \"LocationsMap\");","map":{"version":3,"names":["React","useState","useEffect","useContext","APIProvider","darkThemeStyles","blueBallIcon","SearchContext","jsxDEV","_jsxDEV","LocationsMap","_s","userLat","setUserLat","userLng","setUserLng","results","setResults","mapMarkers","setMapMarkers","getLocation","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","error","console","setFallbackLocation","newMarkers","map","result","index","geometry","location","key","children","fileName","_jsxFileName","lineNumber","columnNumber","apiKey","process","env","React_App_Api_Key","InitMap","id","mapId","defaultCenter","lat","lng","defaultZoom","options","styles","disableDefaultUI","keyboardShortcuts","onLoad","userMarker","window","google","maps","Marker","icon","url","forEach","title","_c","$RefreshReg$"],"sources":["C:/Users/komar/OneDrive/Pulpit/PlacePalApp/client/src/components/LocationsMap.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { APIProvider } from \"@vis.gl/react-google-maps\";\r\nimport { darkThemeStyles, blueBallIcon } from \"./mapStyles.js\";\r\nimport { SearchContext } from \"./SearchContext\";\r\n\r\nexport default function LocationsMap() {\r\n  const { userLat, setUserLat, userLng, setUserLng, results, setResults } =\r\n    useContext(SearchContext);\r\n\r\n  const [mapMarkers, setMapMarkers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getLocation = () => {\r\n      if (navigator.geolocation) {\r\n        navigator.geolocation.getCurrentPosition(\r\n          (position) => {\r\n            setUserLat(position.coords.latitude);\r\n            setUserLng(position.coords.longitude);\r\n          },\r\n          (error) => {\r\n            console.error(\"Error getting location:\", error);\r\n            setFallbackLocation();\r\n          }\r\n        );\r\n      } else {\r\n        setFallbackLocation();\r\n      }\r\n    };\r\n\r\n    const setFallbackLocation = () => {\r\n      setUserLat(51.1027203);\r\n      setUserLng(16.9439538);\r\n    };\r\n\r\n    getLocation();\r\n  }, [setUserLat, setUserLng]);\r\n\r\n  useEffect(() => {\r\n    if (results) {\r\n      const newMarkers = results.map((result, index) => ({\r\n        position: result.geometry.location,\r\n        key: index,\r\n      }));\r\n      setMapMarkers(newMarkers);\r\n    }\r\n  }, [results]);\r\n\r\n  if (userLat === null || userLng === null) {\r\n    return <div>Loading map...</div>;\r\n  }\r\n\r\n  return (\r\n    <APIProvider apiKey={process.env.React_App_Api_Key}>\r\n      <InitMap\r\n        id=\"map\"\r\n        mapId=\"test\"\r\n        defaultCenter={{ lat: userLat, lng: userLng }}\r\n        defaultZoom={13}\r\n        options={{\r\n          styles: darkThemeStyles,\r\n          disableDefaultUI: true,\r\n          keyboardShortcuts: false,\r\n        }}\r\n        onLoad={(map) => {\r\n          // Add the user marker\r\n          const userMarker = new window.google.maps.Marker({\r\n            position: { lat: userLat, lng: userLng },\r\n            map,\r\n            icon: {\r\n              url: blueBallIcon,\r\n            },\r\n          });\r\n\r\n          // Add the result markers\r\n          mapMarkers.forEach(({ position, key }) => {\r\n            new window.google.maps.Marker({\r\n              position,\r\n              map,\r\n              title: `Marker ${key}`,\r\n            });\r\n          });\r\n        }}\r\n      />\r\n    </APIProvider>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,SAASC,WAAW,QAAQ,2BAA2B;AACvD,SAASC,eAAe,EAAEC,YAAY,QAAQ,gBAAgB;AAC9D,SAASC,aAAa,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,eAAe,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACrC,MAAM;IAAEC,OAAO;IAAEC,UAAU;IAAEC,OAAO;IAAEC,UAAU;IAAEC,OAAO;IAAEC;EAAW,CAAC,GACrEd,UAAU,CAACI,aAAa,CAAC;EAE3B,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd,MAAMkB,WAAW,GAAGA,CAAA,KAAM;MACxB,IAAIC,SAAS,CAACC,WAAW,EAAE;QACzBD,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACrCC,QAAQ,IAAK;UACZX,UAAU,CAACW,QAAQ,CAACC,MAAM,CAACC,QAAQ,CAAC;UACpCX,UAAU,CAACS,QAAQ,CAACC,MAAM,CAACE,SAAS,CAAC;QACvC,CAAC,EACAC,KAAK,IAAK;UACTC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;UAC/CE,mBAAmB,CAAC,CAAC;QACvB,CACF,CAAC;MACH,CAAC,MAAM;QACLA,mBAAmB,CAAC,CAAC;MACvB;IACF,CAAC;IAED,MAAMA,mBAAmB,GAAGA,CAAA,KAAM;MAChCjB,UAAU,CAAC,UAAU,CAAC;MACtBE,UAAU,CAAC,UAAU,CAAC;IACxB,CAAC;IAEDK,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACP,UAAU,EAAEE,UAAU,CAAC,CAAC;EAE5Bb,SAAS,CAAC,MAAM;IACd,IAAIc,OAAO,EAAE;MACX,MAAMe,UAAU,GAAGf,OAAO,CAACgB,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,MAAM;QACjDV,QAAQ,EAAES,MAAM,CAACE,QAAQ,CAACC,QAAQ;QAClCC,GAAG,EAAEH;MACP,CAAC,CAAC,CAAC;MACHf,aAAa,CAACY,UAAU,CAAC;IAC3B;EACF,CAAC,EAAE,CAACf,OAAO,CAAC,CAAC;EAEb,IAAIJ,OAAO,KAAK,IAAI,IAAIE,OAAO,KAAK,IAAI,EAAE;IACxC,oBAAOL,OAAA;MAAA6B,QAAA,EAAK;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAClC;EAEA,oBACEjC,OAAA,CAACL,WAAW;IAACuC,MAAM,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAkB;IAAAR,QAAA,eACjD7B,OAAA,CAACsC,OAAO;MACNC,EAAE,EAAC,KAAK;MACRC,KAAK,EAAC,MAAM;MACZC,aAAa,EAAE;QAAEC,GAAG,EAAEvC,OAAO;QAAEwC,GAAG,EAAEtC;MAAQ,CAAE;MAC9CuC,WAAW,EAAE,EAAG;MAChBC,OAAO,EAAE;QACPC,MAAM,EAAElD,eAAe;QACvBmD,gBAAgB,EAAE,IAAI;QACtBC,iBAAiB,EAAE;MACrB,CAAE;MACFC,MAAM,EAAG1B,GAAG,IAAK;QACf;QACA,MAAM2B,UAAU,GAAG,IAAIC,MAAM,CAACC,MAAM,CAACC,IAAI,CAACC,MAAM,CAAC;UAC/CvC,QAAQ,EAAE;YAAE2B,GAAG,EAAEvC,OAAO;YAAEwC,GAAG,EAAEtC;UAAQ,CAAC;UACxCkB,GAAG;UACHgC,IAAI,EAAE;YACJC,GAAG,EAAE3D;UACP;QACF,CAAC,CAAC;;QAEF;QACAY,UAAU,CAACgD,OAAO,CAAC,CAAC;UAAE1C,QAAQ;UAAEa;QAAI,CAAC,KAAK;UACxC,IAAIuB,MAAM,CAACC,MAAM,CAACC,IAAI,CAACC,MAAM,CAAC;YAC5BvC,QAAQ;YACRQ,GAAG;YACHmC,KAAK,EAAE,UAAU9B,GAAG;UACtB,CAAC,CAAC;QACJ,CAAC,CAAC;MACJ;IAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAElB;AAAC/B,EAAA,CAhFuBD,YAAY;AAAA0D,EAAA,GAAZ1D,YAAY;AAAA,IAAA0D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}