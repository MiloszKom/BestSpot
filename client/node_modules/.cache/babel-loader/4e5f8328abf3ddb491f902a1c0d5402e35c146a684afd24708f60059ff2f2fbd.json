{"ast":null,"code":"// import React, { useState, useEffect, useContext } from \"react\";\n// import { APIProvider, Map, Marker } from \"@vis.gl/react-google-maps\";\n// import { darkThemeStyles, blueBallIcon } from \"./mapStyles.js\";\n// import { SearchContext } from \"./SearchContext\";\n\n// export default function LocationsMap() {\n//   const { userLat, setUserLat, userLng, setUserLng } =\n//     useContext(SearchContext);\n\n//   useEffect(() => {\n//     const getLocation = () => {\n//       if (navigator.geolocation) {\n//         navigator.geolocation.getCurrentPosition(\n//           (position) => {\n//             setUserLat(position.coords.latitude);\n//             setUserLng(position.coords.longitude);\n//           },\n//           (error) => {\n//             console.error(\"Error getting location:\", error);\n//             setFallbackLocation();\n//           }\n//         );\n//       } else {\n//         setFallbackLocation();\n//       }\n//     };\n\n//     const setFallbackLocation = () => {\n//       setUserLat(51.1027203);\n//       setUserLng(16.9439538);\n//     };\n\n//     getLocation();\n//   }, [setUserLat, setUserLng]);\n\n//   if (userLat === null || userLng === null) {\n//     return <div>Loading map...</div>;\n//   }\n\n//   return (\n//     <APIProvider apiKey={process.env.React_App_Api_Key}>\n//       <Map\n//         id=\"map\"\n//         keyboardShortcuts={false}\n//         disableDefaultUI={true}\n//         defaultZoom={13}\n//         defaultCenter={{ lat: userLat, lng: userLng }}\n//         options={{\n//           styles: darkThemeStyles,\n//         }}\n//       >\n//         <Marker\n//           position={{ lat: userLat, lng: userLng }}\n//           icon={{\n//             url: blueBallIcon,\n//           }}\n//         />\n//       </Map>\n//     </APIProvider>\n//   );\n// }","map":{"version":3,"names":[],"sources":["C:/Users/komar/OneDrive/Pulpit/PlacePalApp/client/src/components/LocationsMap.jsx"],"sourcesContent":["// import React, { useState, useEffect, useContext } from \"react\";\r\n// import { APIProvider, Map, Marker } from \"@vis.gl/react-google-maps\";\r\n// import { darkThemeStyles, blueBallIcon } from \"./mapStyles.js\";\r\n// import { SearchContext } from \"./SearchContext\";\r\n\r\n// export default function LocationsMap() {\r\n//   const { userLat, setUserLat, userLng, setUserLng } =\r\n//     useContext(SearchContext);\r\n\r\n//   useEffect(() => {\r\n//     const getLocation = () => {\r\n//       if (navigator.geolocation) {\r\n//         navigator.geolocation.getCurrentPosition(\r\n//           (position) => {\r\n//             setUserLat(position.coords.latitude);\r\n//             setUserLng(position.coords.longitude);\r\n//           },\r\n//           (error) => {\r\n//             console.error(\"Error getting location:\", error);\r\n//             setFallbackLocation();\r\n//           }\r\n//         );\r\n//       } else {\r\n//         setFallbackLocation();\r\n//       }\r\n//     };\r\n\r\n//     const setFallbackLocation = () => {\r\n//       setUserLat(51.1027203);\r\n//       setUserLng(16.9439538);\r\n//     };\r\n\r\n//     getLocation();\r\n//   }, [setUserLat, setUserLng]);\r\n\r\n//   if (userLat === null || userLng === null) {\r\n//     return <div>Loading map...</div>;\r\n//   }\r\n\r\n//   return (\r\n//     <APIProvider apiKey={process.env.React_App_Api_Key}>\r\n//       <Map\r\n//         id=\"map\"\r\n//         keyboardShortcuts={false}\r\n//         disableDefaultUI={true}\r\n//         defaultZoom={13}\r\n//         defaultCenter={{ lat: userLat, lng: userLng }}\r\n//         options={{\r\n//           styles: darkThemeStyles,\r\n//         }}\r\n//       >\r\n//         <Marker\r\n//           position={{ lat: userLat, lng: userLng }}\r\n//           icon={{\r\n//             url: blueBallIcon,\r\n//           }}\r\n//         />\r\n//       </Map>\r\n//     </APIProvider>\r\n//   );\r\n// }\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}