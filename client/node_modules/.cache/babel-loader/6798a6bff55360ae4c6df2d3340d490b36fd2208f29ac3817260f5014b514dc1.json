{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\komar\\\\OneDrive\\\\Pulpit\\\\BestSpot\\\\client\\\\src\\\\components\\\\map.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useMemo, useCallback, useRef } from \"react\";\nimport { Circle, useLoadScript } from \"@react-google-maps/api\";\nimport { APIProvider, Map, useMap, AdvancedMarker, Marker } from \"@vis.gl/react-google-maps\";\nimport SearchFilters from \"./SearchFilters\";\nimport Spots from \"./Spots\";\nimport SearchBar from \"./SearchBar\";\nimport { blueBallIcon } from \"./mapStyles.js\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function GoogleMap() {\n  _s();\n  const [location, setLocation] = useState();\n  const [sliderValue, setSliderValue] = useState(0);\n  const [spotValue, setSpotValue] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const mapRef = useRef();\n  const center = useMemo(() => ({\n    lat: 51.103574,\n    lng: 16.943842\n  }), []);\n  const options = useMemo(() => ({\n    mapId: \"b181cac70f27f5e6\",\n    disableDefaultUI: true,\n    clickableIcons: false\n  }), []);\n  const onLoad = useCallback(map => mapRef.current = map, []);\n  const handleSearch = () => {\n    const data = {\n      keyword: spotValue,\n      location: {\n        lat: location.lat,\n        lng: location.lng\n      },\n      radius: sliderValue\n    };\n    const searchFilters = document.querySelector(\".search-filters\");\n    if (searchFilters) {\n      searchFilters.style.marginTop = \"0dvh\";\n    }\n    fetch(\"/api/search\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    }).then(response => response.json()).then(result => {\n      console.log(\"Success:\", result.googleData.results);\n      setSearchResults(result.googleData.results);\n    }).catch(error => {\n      console.error(\"Error:\", error);\n    });\n  };\n  const {\n    isLoaded\n  } = useLoadScript({\n    googleMapsApiKey: process.env.React_App_Api_Key,\n    libraries: [\"places\"]\n  });\n  if (!isLoaded) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loader\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), isLoaded, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map\",\n        children: /*#__PURE__*/_jsxDEV(APIProvider, {\n          apiKey: process.env.React_App_Api_Key,\n          children: /*#__PURE__*/_jsxDEV(Map, {\n            zoom: 10,\n            center: center,\n            options: options,\n            mapContainerClassName: \"map-container2\",\n            onLoad: onLoad,\n            children: [location && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Marker, {\n                position: location,\n                icon: {\n                  url: blueBallIcon\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Circle, {\n                center: location,\n                radius: sliderValue * 100\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true), searchResults && searchResults.map(result => /*#__PURE__*/_jsxDEV(Marker, {\n              position: result.geometry.location,\n              label: {\n                text: `${result.name} (${result.rating})`,\n                color: \"#00aaff\",\n                fontWeight: \"bold\",\n                fontSize: \"0.7rem\"\n              },\n              icon: {\n                url: \"http://maps.google.com/mapfiles/ms/icons/red-dot.png\",\n                labelOrigin: new window.google.maps.Point(17, 40) // Adjust x and y values\n              }\n            }, result.place_id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Spots, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchFilters, {\n      setLocation: position => {\n        var _mapRef$current;\n        setLocation(position);\n        (_mapRef$current = mapRef.current) === null || _mapRef$current === void 0 ? void 0 : _mapRef$current.panTo(position);\n      },\n      sliderValue: sliderValue,\n      setSliderValue: setSliderValue,\n      spotValue: spotValue,\n      setSpotValue: setSpotValue,\n      handleSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(GoogleMap, \"Ij001vBzxHsw1BCtryluS+XTSMA=\", false, function () {\n  return [useLoadScript];\n});\n_c = GoogleMap;\nvar _c;\n$RefreshReg$(_c, \"GoogleMap\");","map":{"version":3,"names":["useState","useMemo","useCallback","useRef","Circle","useLoadScript","APIProvider","Map","useMap","AdvancedMarker","Marker","SearchFilters","Spots","SearchBar","blueBallIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","GoogleMap","_s","location","setLocation","sliderValue","setSliderValue","spotValue","setSpotValue","searchResults","setSearchResults","mapRef","center","lat","lng","options","mapId","disableDefaultUI","clickableIcons","onLoad","map","current","handleSearch","data","keyword","radius","searchFilters","document","querySelector","style","marginTop","fetch","method","headers","body","JSON","stringify","then","response","json","result","console","log","googleData","results","catch","error","isLoaded","googleMapsApiKey","process","env","React_App_Api_Key","libraries","className","fileName","_jsxFileName","lineNumber","columnNumber","children","apiKey","zoom","mapContainerClassName","position","icon","url","geometry","label","text","name","rating","color","fontWeight","fontSize","labelOrigin","window","google","maps","Point","place_id","_mapRef$current","panTo","_c","$RefreshReg$"],"sources":["C:/Users/komar/OneDrive/Pulpit/BestSpot/client/src/components/map.jsx"],"sourcesContent":["import { useState, useMemo, useCallback, useRef } from \"react\";\r\n\r\nimport { Circle, useLoadScript } from \"@react-google-maps/api\";\r\n\r\nimport {\r\n  APIProvider,\r\n  Map,\r\n  useMap,\r\n  AdvancedMarker,\r\n  Marker,\r\n} from \"@vis.gl/react-google-maps\";\r\n\r\nimport SearchFilters from \"./SearchFilters\";\r\nimport Spots from \"./Spots\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport { blueBallIcon } from \"./mapStyles.js\";\r\n\r\nexport default function GoogleMap() {\r\n  const [location, setLocation] = useState();\r\n  const [sliderValue, setSliderValue] = useState(0);\r\n  const [spotValue, setSpotValue] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const mapRef = useRef();\r\n  const center = useMemo(() => ({ lat: 51.103574, lng: 16.943842 }), []);\r\n  const options = useMemo(\r\n    () => ({\r\n      mapId: \"b181cac70f27f5e6\",\r\n      disableDefaultUI: true,\r\n      clickableIcons: false,\r\n    }),\r\n    []\r\n  );\r\n  const onLoad = useCallback((map) => (mapRef.current = map), []);\r\n\r\n  const handleSearch = () => {\r\n    const data = {\r\n      keyword: spotValue,\r\n      location: {\r\n        lat: location.lat,\r\n        lng: location.lng,\r\n      },\r\n      radius: sliderValue,\r\n    };\r\n\r\n    const searchFilters = document.querySelector(\".search-filters\");\r\n    if (searchFilters) {\r\n      searchFilters.style.marginTop = \"0dvh\";\r\n    }\r\n\r\n    fetch(\"/api/search\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        console.log(\"Success:\", result.googleData.results);\r\n        setSearchResults(result.googleData.results);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error:\", error);\r\n      });\r\n  };\r\n\r\n  const { isLoaded } = useLoadScript({\r\n    googleMapsApiKey: process.env.React_App_Api_Key,\r\n    libraries: [\"places\"],\r\n  });\r\n\r\n  if (!isLoaded) return <div className=\"loader\"></div>;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <SearchBar />\r\n        {isLoaded}\r\n        <div className=\"map\">\r\n          <APIProvider apiKey={process.env.React_App_Api_Key}>\r\n            <Map\r\n              zoom={10}\r\n              center={center}\r\n              options={options}\r\n              mapContainerClassName=\"map-container2\"\r\n              onLoad={onLoad}\r\n            >\r\n              {location && (\r\n                <>\r\n                  <Marker\r\n                    position={location}\r\n                    icon={{\r\n                      url: blueBallIcon,\r\n                    }}\r\n                  />\r\n                  <Circle center={location} radius={sliderValue * 100}></Circle>\r\n                </>\r\n              )}\r\n\r\n              {searchResults &&\r\n                searchResults.map((result) => (\r\n                  <Marker\r\n                    key={result.place_id}\r\n                    position={result.geometry.location}\r\n                    label={{\r\n                      text: `${result.name} (${result.rating})`,\r\n                      color: \"#00aaff\",\r\n                      fontWeight: \"bold\",\r\n                      fontSize: \"0.7rem\",\r\n                    }}\r\n                    icon={{\r\n                      url: \"http://maps.google.com/mapfiles/ms/icons/red-dot.png\",\r\n                      labelOrigin: new window.google.maps.Point(17, 40), // Adjust x and y values\r\n                    }}\r\n                  />\r\n                ))}\r\n            </Map>\r\n          </APIProvider>\r\n        </div>\r\n        <Spots />\r\n      </div>\r\n      <SearchFilters\r\n        setLocation={(position) => {\r\n          setLocation(position);\r\n          mapRef.current?.panTo(position);\r\n        }}\r\n        sliderValue={sliderValue}\r\n        setSliderValue={setSliderValue}\r\n        spotValue={spotValue}\r\n        setSpotValue={setSpotValue}\r\n        handleSearch={handleSearch}\r\n      />\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}